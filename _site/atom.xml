<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-29T21:21:38-07:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">subtlepurpose</title><subtitle>A software development blog for cloud and DevOps.</subtitle><author><name>Adrian Teng-Amnuay</name><email>pumpadrian@gmail.com</email></author><entry><title type="html">Getting started with AWS Lambda Functions</title><link href="http://localhost:4000/aws/2019/10/20/getting-started-with-aws-lambda/" rel="alternate" type="text/html" title="Getting started with AWS Lambda Functions" /><published>2019-10-20T00:00:00-07:00</published><updated>2019-10-20T00:00:00-07:00</updated><id>http://localhost:4000/aws/2019/10/20/getting-started-with-aws-lambda</id><content type="html" xml:base="http://localhost:4000/aws/2019/10/20/getting-started-with-aws-lambda/">&lt;p&gt;AWS Lambda is Amazon’s &lt;em&gt;function as a service&lt;/em&gt; product. It’s a service that lets you package and run code without having to provision or manage servers. With Lambda, you only pay when your code is running. By contrast, you pay for managed servers like EC2 as long as they are running, even while they are not serving any requests.&lt;/p&gt;

&lt;p&gt;To begin with AWS Lambda, you first write some code in one of the supported languages, you package and upload this code to Lambda, and now you have a &lt;em&gt;Lambda function&lt;/em&gt; that can be run on demand. The Lambda function can be triggered from other AWS services such as SNS, SQS, API Gateway, and Cloudwatch events. Another benefit of Lambda is that it scales automatically based on the number of requests.&lt;/p&gt;

&lt;p&gt;In this tutorial, I’ll go over how to create and manage a Lambda function, as well as how to trigger the lambda function from different event sources. This tutorial assumes you know how to write some very basic code and are familiar with the AWS Console.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-lambda-function&quot;&gt;Create a Lambda Function&lt;/h2&gt;
&lt;p&gt;Let’s start by creating a simple Lambda function. Navigate to the AWS Console and search for “Lambda”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/aws-console-search-lambda.png&quot; alt=&quot;AWS Console searchbar Lambda&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Please make a note of the region in which you create your lambda function. AWS resources are generally tied to a specific region and Lambda is no exception.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/aws-console-navbar-region.png&quot; alt=&quot;AWS Console navbar region&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next select the &lt;em&gt;Create function&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-dashboard-create-function-button.png&quot; alt=&quot;Lambda dashboard create function button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial we’ll be selecting &lt;em&gt;Author from Scratch&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Other options include &lt;em&gt;Use a blueprint&lt;/em&gt; which lets you browse the repository of Lambda functions to use as a starter template, and &lt;em&gt;Serverless App repository&lt;/em&gt;. The &lt;em&gt;Serverless App repository&lt;/em&gt; contains &lt;strong&gt;CloudFormation&lt;/strong&gt; templates which often define, in addition to one or more Lambda functions, a group of AWS resources to create. &lt;strong&gt;CloudFormation&lt;/strong&gt; is outside the scope of this tutorial.&lt;/p&gt;

&lt;p&gt;Fill out the form by giving your function a name and selecting the runtime language of your choice. For the execution role, we’ll create a new one with basic permissions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-dashboard-create-form.png&quot; alt=&quot;Lambda dashboard create function form&quot; /&gt;&lt;/p&gt;

&lt;p&gt;An execution role is an &lt;em&gt;IAM Role&lt;/em&gt; that the Lambda function assumes whenever it runs. This role has permissions tied to it so you can limit the scope of what the lambda function does. There are three options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Create a new role with basic Lambda permissions&lt;/em&gt;: Lambda creates a new IAM role with minimal permissions, ie. ability to send CloudWatch logs, for your Lambda. This is the one we’ve chosen for convenience.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Use an existing role&lt;/em&gt;: Select a role which already exists.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Create a new role from AWS policy templates&lt;/em&gt;: Creates an IAM role from several cookie-cutter policy templates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click &lt;em&gt;Create function&lt;/em&gt; and wait for the lambda function to be created.&lt;/p&gt;

&lt;h2 id=&quot;getting-to-know-the-ui&quot;&gt;Getting to know the UI&lt;/h2&gt;

&lt;h3 id=&quot;the-designer&quot;&gt;The Designer&lt;/h3&gt;

&lt;p&gt;Once your Lambda function has been created, you should be redirected to the the following page. The designer section gives you a visualization of &lt;em&gt;Triggers&lt;/em&gt; on the left, which are events that can trigger your lambda function to run, and services that your Lambda function has permission to interact with on the right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-ui-designer-section.png&quot; alt=&quot;Lambda UI designer section&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, our Lambda function currently has no associated triggers, and only has permission to send logs to Cloudwatch. The services that your Lambda function has permission to interact with, is defined by the IAM role that was associated with it during creation time. The Lambda function’s execution role can be updated even after the Lambda function is created. It can also be replaced with a different role.&lt;/p&gt;

&lt;h3 id=&quot;the-in-browser-code-editor&quot;&gt;The In-browser code editor&lt;/h3&gt;

&lt;p&gt;Lambda supports an in-browser code editor for convenience. You can update code, save your changes, and test them out as you go. While the in-browser editor is convenient for trying out Lambda, or working with smaller functions, it’s not recommended for larger projects because there are limitations around deployment package size.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-ui-code-section.png&quot; alt=&quot;Lambda UI code section&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;test-the-function&quot;&gt;Test the function&lt;/h3&gt;

&lt;h4 id=&quot;create-a-test-event&quot;&gt;Create a test event&lt;/h4&gt;
&lt;p&gt;Our lambda has already been set up to return an object with &lt;em&gt;statusCode: 200&lt;/em&gt; and &lt;em&gt;body: “Hello from Lambda!”&lt;/em&gt;, so let’s try running it manually. Click on the &lt;em&gt;Test&lt;/em&gt; button on the Lambda navigation bar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-ui-test-button.png&quot; alt=&quot;Lambda UI test button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will open up a form where you can manage and create test events. When your lambda function runs, the event’s contents are passed to the &lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt; argument in your lambda function’s handler.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-create-test-hello-event.png&quot; alt=&quot;Lambda create test event form&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every service that triggers Lambda passes the &lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt; argument with relevant information. For example if a Cloudwatch metric triggered your function, it would pass the metric value and threshold that caused the event to trigger. In this way, test events can be used to simulate different events, and you can test that your Lambda function behaves correctly in each scenario.&lt;/p&gt;

&lt;h4 id=&quot;trigger-the-test-event&quot;&gt;Trigger the test event&lt;/h4&gt;

&lt;p&gt;Once you’ve created the test &lt;em&gt;HelloEvent&lt;/em&gt;, we can now trigger the lambda function with it. Make sure &lt;em&gt;HelloEvent&lt;/em&gt; is selected and click &lt;em&gt;Test&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-select-test-event-and-run-test.png&quot; alt=&quot;Lambda select HelloEvent and click test&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;view-the-log-output&quot;&gt;View the log output&lt;/h4&gt;

&lt;p&gt;You should see that the lambda function executed and succeeded. You can view the logs by expanding the execution details at the top. Clicking &lt;em&gt;logs&lt;/em&gt; will take you to the Cloudwatch dashboard where you can view historical logs across multiple runs of your Lambda function.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-execution-log-details.png&quot; alt=&quot;Lambda execution log details&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also view logs in the editor’s results section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-execution-editor-results.png&quot; alt=&quot;Lambda execution editor results&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;print-out-the-event&quot;&gt;Print out the event&lt;/h4&gt;

&lt;p&gt;Let’s update the Lambda function to print out the argument event. Update the function code like&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lambda_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Event: {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Add this line&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'statusCode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello from Lambda!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Click &lt;em&gt;Save&lt;/em&gt; and run the function again with the &lt;em&gt;HelloEvent&lt;/em&gt; test event. You should now see the event being printed out in the log output.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;START RequestId: 9a14a9d0-e6a4-4761-aeb6-e572ef6971e7 Version: $LATEST
Event: {'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}
END RequestId: 9a14a9d0-e6a4-4761-aeb6-e572ef6971e7
REPORT RequestId: 9a14a9d0-e6a4-4761-aeb6-e572ef6971e7	Duration: 19.07 ms	Billed Duration: 100 ms	Memory Size: 128 MB	Max Memory Used: 56 MB	Init Duration: 108.39 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;environtment-variables&quot;&gt;Environtment Variables&lt;/h3&gt;

&lt;p&gt;Environment variables are useful for parameterizing things like database connection strings, &lt;strong&gt;Arn&lt;/strong&gt; references to other AWS resources, environment specific settings, or really anything you want to control without having to make code changes and redeploy your function.&lt;/p&gt;

&lt;h3 id=&quot;basic-settings&quot;&gt;Basic Settings&lt;/h3&gt;

&lt;p&gt;I’ll be skipping over a few of the other sections but I wanted to make sure to cover the &lt;em&gt;Basic Settings&lt;/em&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-ui-basic-settings.png&quot; alt=&quot;Lambda UI Basic Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this section you define how much &lt;em&gt;Memory&lt;/em&gt; your Lambda function requires. It receives CPU proportional to the amount of memory that you choose. You also specify a &lt;em&gt;Timeout&lt;/em&gt;, which is used by Amazon to kill your function if it hasn’t finished processing within the set timeout.&lt;/p&gt;

&lt;p&gt;These fields are relevant because with Lambda, you are billed either by how many executions or by how many &lt;strong&gt;GB-seconds&lt;/strong&gt; you use per month. For more information on pricing, see &lt;a href=&quot;https://aws.amazon.com/lambda/pricing/&quot;&gt;https://aws.amazon.com/lambda/pricing/&lt;/a&gt;. And don’t worry, at the time of writing, this tutorial qualifies under the free-tier.&lt;/p&gt;

&lt;h2 id=&quot;triggers&quot;&gt;Triggers&lt;/h2&gt;

&lt;p&gt;Now that we have a basic understanding of Lambda and a working function, let’s try attaching a few different triggers to automatically kick off a function execution instead of manually triggering it with a &lt;em&gt;TestEvent&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;cloudwatch-scheduled-event&quot;&gt;Cloudwatch Scheduled Event&lt;/h3&gt;
&lt;p&gt;Cloudwatch scheduled events are one of the simplest types of triggers. A cloudwatch scheduled event, as the name implies, simply triggers on a preset schedule. Let’s start by creating a simple cloudwatch scheduled event that triggers our function once a day.&lt;/p&gt;

&lt;p&gt;In the &lt;em&gt;Designer&lt;/em&gt; section, click &lt;em&gt;Add Trigger&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-add-trigger-button.png&quot; alt=&quot;Lambda add trigger button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, select &lt;em&gt;CloudWatch Events&lt;/em&gt; from the dropdown and fill in the form like so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-trigger-cloudwatch-event-create-rule-form.png&quot; alt=&quot;Lambda create cloudwatch event trigger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should now see the &lt;em&gt;CloudWatch Events&lt;/em&gt; trigger summary in the designer view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/lambda-designer-summary-with-cw-event.png&quot; alt=&quot;Lambda designer cloudwatch trigger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To see the cloudwatch scheduled event in action, you might want to change the schedule to something more frequent like once a minute.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this tutorial we learned how to do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a lambda function from scratch with basic permissions&lt;/li&gt;
  &lt;li&gt;Update code using the in-browser code editor&lt;/li&gt;
  &lt;li&gt;View log output for a lambda function execution&lt;/li&gt;
  &lt;li&gt;Attach an event trigger such as CloudWatch scheduled events&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To delete your lambda function, navigate back to the functions dashboard and click on &lt;em&gt;Actions&lt;/em&gt; -&amp;gt; &lt;em&gt;Delete&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/delete-lambda-function.png&quot; alt=&quot;Delete a lambda function&quot; /&gt;&lt;/p&gt;</content><author><name>Adrian Teng-Amnuay</name><email>pumpadrian@gmail.com</email></author><category term="lambda" /><summary type="html">AWS Lambda is Amazon’s function as a service product. It’s a service that lets you package and run code without having to provision or manage servers. With Lambda, you only pay when your code is running. By contrast, you pay for managed servers like EC2 as long as they are running, even while they are not serving any requests. To begin with AWS Lambda, you first write some code in one of the supported languages, you package and upload this code to Lambda, and now you have a Lambda function that can be run on demand. The Lambda function can be triggered from other AWS services such as SNS, SQS, API Gateway, and Cloudwatch events. Another benefit of Lambda is that it scales automatically based on the number of requests. In this tutorial, I’ll go over how to create and manage a Lambda function, as well as how to trigger the lambda function from different event sources. This tutorial assumes you know how to write some very basic code and are familiar with the AWS Console.</summary></entry><entry><title type="html">Getting started with the AWS Command-Line Interface</title><link href="http://localhost:4000/aws/2019/10/10/getting-started-with-the-aws-cli/" rel="alternate" type="text/html" title="Getting started with the AWS Command-Line Interface" /><published>2019-10-10T00:00:00-07:00</published><updated>2019-10-10T00:00:00-07:00</updated><id>http://localhost:4000/aws/2019/10/10/getting-started-with-the-aws-cli</id><content type="html" xml:base="http://localhost:4000/aws/2019/10/10/getting-started-with-the-aws-cli/">&lt;p&gt;In this tutorial you’ll install the AWS command line interface and learn how to set up an IAM user with programmatic access to AWS resources. This tutorial assumes you have basic command-line knowledge on either Mac or a unix-like operating system.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-the-aws-cli-command-line-interface&quot;&gt;Installing the AWS CLI (Command-Line Interface)&lt;/h2&gt;

&lt;p&gt;Make sure you have &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pip&lt;/code&gt; installed. &lt;code class=&quot;highlighter-rouge&quot;&gt;pip&lt;/code&gt; is a tool for installing python packages. You can check that you have them installed using these commands.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 2.7.16

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
pip 19.1.1 from /usr/local/lib/python2.7/site-packages/pip &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;python 2.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next install the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; package. Note that your output may look different from mine.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; awscli
DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won&lt;span class=&quot;s1&quot;&gt;'t be maintained after that date. A future version of pip will drop support for Python 2.7.
Requirement already satisfied: awscli in /usr/local/lib/python2.7/site-packages (1.16.72)
Requirement already satisfied: docutils&amp;gt;=0.10 in /usr/local/lib/python2.7/site-packages (from awscli) (0.14)
Requirement already satisfied: botocore==1.12.62 in /usr/local/lib/python2.7/site-packages (from awscli) (1.12.62)
Requirement already satisfied: PyYAML&amp;lt;=3.13,&amp;gt;=3.10 in /usr/local/lib/python2.7/site-packages (from awscli) (3.13)
Requirement already satisfied: s3transfer&amp;lt;0.2.0,&amp;gt;=0.1.12 in /usr/local/lib/python2.7/site-packages (from awscli) (0.1.13)
Requirement already satisfied: rsa&amp;lt;=3.5.0,&amp;gt;=3.1.2 in /usr/local/lib/python2.7/site-packages (from awscli) (3.4.2)
Requirement already satisfied: colorama&amp;lt;=0.3.9,&amp;gt;=0.2.5 in /usr/local/lib/python2.7/site-packages (from awscli) (0.3.9)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.20; python_version == &quot;2.7&quot; in /usr/local/lib/python2.7/site-packages (from botocore==1.12.62-&amp;gt;awscli) (1.24.1)
Requirement already satisfied: jmespath&amp;lt;1.0.0,&amp;gt;=0.7.1 in /usr/local/lib/python2.7/site-packages (from botocore==1.12.62-&amp;gt;awscli) (0.9.3)
Requirement already satisfied: python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1; python_version &amp;gt;= &quot;2.7&quot; in /usr/local/lib/python2.7/site-packages (from botocore==1.12.62-&amp;gt;awscli) (2.7.5)
Requirement already satisfied: futures&amp;lt;4.0.0,&amp;gt;=2.2.0; python_version == &quot;2.6&quot; or python_version == &quot;2.7&quot; in /usr/local/lib/python2.7/site-packages (from s3transfer&amp;lt;0.2.0,&amp;gt;=0.1.12-&amp;gt;awscli) (3.2.0)
Requirement already satisfied: pyasn1&amp;gt;=0.1.3 in /usr/local/lib/python2.7/site-packages (from rsa&amp;lt;=3.5.0,&amp;gt;=3.1.2-&amp;gt;awscli) (0.4.4)
Requirement already satisfied: six&amp;gt;=1.5 in /usr/local/lib/python2.7/site-packages (from python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1; python_version &amp;gt;= &quot;2.7&quot;-&amp;gt;botocore==1.12.62-&amp;gt;awscli) (1.10.0)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Verify that the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; tool was successfully installed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
aws-cli/1.16.72 Python/2.7.16 Darwin/17.7.0 botocore/1.12.62
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to make use of the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; tool, you will need programmatic access keys that allow the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; to &lt;em&gt;talk&lt;/em&gt; to the Amazon Web Services API. API stands for &lt;strong&gt;Application Program Interface&lt;/strong&gt; and Web APIs in particular have become a standard practice for enabling programmatic interaction with web services.&lt;/p&gt;

&lt;h2 id=&quot;what-is-an-iam-user&quot;&gt;What is an IAM User?&lt;/h2&gt;
&lt;p&gt;In this next section, you’re going to create an &lt;strong&gt;IAM User&lt;/strong&gt; from the AWS Console. IAM stands for &lt;strong&gt;Identity and Access Management&lt;/strong&gt; and it is used extensively in AWS to allow or deny permission to resources and services.&lt;/p&gt;

&lt;p&gt;When you first create an AWS account, you can only login as the &lt;strong&gt;AWS Account Root User&lt;/strong&gt;. This user has the permission to do anything and everything in your account. If you create access keys for the root user and the keys are compromised, there is no limit to what a malicious actor can do in your account, and you could wake up one morning to an AWS bill for tens of thousands of dollars.&lt;/p&gt;

&lt;p&gt;It’s generally recommended to create another user or set of users with limited access, while keeping the root account credentials securely locked away. However, since IAM is beyond the scope of this tutorial, we’ll be creating a user with very permissive access for the sake of convenience. Please note this is only a slight improvement from using the root account directly and is not very secure nor recommended for a production setup.&lt;/p&gt;

&lt;h3 id=&quot;create-the-iam-user&quot;&gt;Create the IAM User&lt;/h3&gt;
&lt;p&gt;Log in to the AWS console and search for the IAM service.
&lt;img src=&quot;/assets/img/aws-console-search-iam.png&quot; alt=&quot;AWS Console searchbar IAM&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;em&gt;Users&lt;/em&gt; link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/iam-dashboard-select-users.png&quot; alt=&quot;IAM dashboard users link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;em&gt;Add user&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/iam-dashboard-add-user-button.png&quot; alt=&quot;IAM dashboard add user button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in the username and make sure to check &lt;em&gt;Programmatic access&lt;/em&gt;. Click &lt;em&gt;Next: Permissions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/iam-create-user-page-one.png&quot; alt=&quot;Add user page one&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;em&gt;Attach existing policies directly&lt;/em&gt; and search for &lt;strong&gt;PowerUserAccess&lt;/strong&gt;. Select the policy and click &lt;em&gt;Next: Tags&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/attach-power-user-iam-policy.png&quot; alt=&quot;Select PowerUserAccess policy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Skip the tags section and click &lt;em&gt;Next: Review&lt;/em&gt;. The summary should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/iam-user-create-review.png&quot; alt=&quot;Create user summary&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next page shows that IAM User creation was successful. The &lt;em&gt;Access Key ID&lt;/em&gt; will be displayed, but you will have to click &lt;em&gt;Show&lt;/em&gt; to display the &lt;em&gt;Secret access key&lt;/em&gt;. You will need to take note of both of these keys for CLI access.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/access-key-secret-key.png&quot; alt=&quot;Display access and secret key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note that for security reasons, you will not be able to look up the secret access key after this point&lt;/strong&gt;. If you end up losing access to your secret access key, you will have to create a new set of access keys, but not necessarily a new user.&lt;/p&gt;

&lt;h2 id=&quot;update-the-cli-to-use-access-keys&quot;&gt;Update the CLI to use access keys&lt;/h2&gt;
&lt;p&gt;Run the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws configure&lt;/code&gt; command which will prompt you for the access and secret key.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws configure
AWS Access Key ID &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;****************&lt;/span&gt;MBAQ]:
AWS Secret Access Key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;****************&lt;/span&gt;1H4e]:
Default region name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;us-east-1]:
Default output format &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can leave the defaults for &lt;em&gt;region&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; when prompted. Your output may look different from mine since I already have default credentials configured.&lt;/p&gt;

&lt;p&gt;This command creates two files &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.aws/credentials&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.aws/config&lt;/code&gt; if they do not exist, and updates their contents with the information provided. You can update or create these files by hand rather than using the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws configure&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; tool should now be configured to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt; profile which is associated with the new access keys.&lt;/p&gt;

&lt;p&gt;Try running the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws sts get-caller-identity&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws sts get-caller-identity
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Account&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;xxxx&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;UserId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;AIDA5IXRS7JVGTIATEOOB&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;Arn&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:iam::xxxx:user/test&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command simply returns the caller’s identity and you can see the “test” username present in the &lt;strong&gt;Arn&lt;/strong&gt; field.&lt;/p&gt;

&lt;h2 id=&quot;getting-to-know-the-aws-cli&quot;&gt;Getting to know the AWS CLI&lt;/h2&gt;

&lt;p&gt;The syntax for &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; commands looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;aws &amp;lt;command&amp;gt; &amp;lt;subcommand&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt;. The &lt;em&gt;command&lt;/em&gt; is usally the name of an AWS service like &lt;code class=&quot;highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;iam&lt;/code&gt;, etc. The &lt;em&gt;subcommand&lt;/em&gt; is usually an action associated with that service, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2 start-instances&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;iam create-user&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To get a list of available services you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;aws help&lt;/code&gt;. To get a list of available actions for a particular service you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;aws &amp;lt;command&amp;gt; help&lt;/code&gt;, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;aws ec2 help&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s try creating an S3 Bucket from the command-line. S3 stands for &lt;em&gt;Simple Storage Service&lt;/em&gt;, and it is Amazon’s blob storage service for uploading and downloading arbitrary files. The command for creating a bucket is &lt;code class=&quot;highlighter-rouge&quot;&gt;aws s3 mb&lt;/code&gt;. To know what arguments this command takes, we should run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws s3 mb &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This returns a man-pages style document which tells us everything we need to know about the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws s3 mb&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MB()                                                                      MB()



NAME
       mb -

DESCRIPTION
       Creates an S3 bucket.

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            mb
          &amp;lt;S3Uri&amp;gt;

OPTIONS
       path (string)

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The  following  mb command creates a bucket.  In this example, the user
       makes the bucket mybucket.  The bucket is created in the region  speci-
       fied in the user's configuration file:

          aws s3 mb s3://mybucket

       Output:
...skipping...
OPTIONS
       path (string)

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The  following  mb command creates a bucket.  In this example, the user
       makes the bucket mybucket.  The bucket is created in the region  speci-
       fied in the user's configuration file:

          aws s3 mb s3://mybucket

       Output:

          make_bucket: s3://mybucket

       The  following mb command creates a bucket in a region specified by the
       --region parameter.   In  this  example,  the  user  makes  the  bucket
       mybucket in the region us-west-1:

          aws s3 mb s3://mybucket --region us-west-1

       Output:

          make_bucket: s3://mybucket



                                                                          MB()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So looking at the examples, we can see that in order to create a bucket named “mybucket” we should run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;aws s3 mb s3://mybucket&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws s3 mb s3://test-9187263
make_bucket: test-9187263
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this example we created an S3 bucket named &lt;code class=&quot;highlighter-rouge&quot;&gt;test-9187263&lt;/code&gt;. Amazon requires S3 bucket names to be globally unique across all of AWS, similar to domain names on the internet. So if you tried to make a bucket named “mybucket” you probably ran into a &lt;strong&gt;BucketAlreadyExists&lt;/strong&gt; error.&lt;/p&gt;

&lt;p&gt;We can delete the bucket using the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws s3 rb&lt;/code&gt; command. This command accepts a single argument which, like the make-bucket command, is the S3Uri. If you weren’t sure about the syntax of the command you could have run &lt;code class=&quot;highlighter-rouge&quot;&gt;aws s3 rb help&lt;/code&gt; to see usage documentation and examples.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws s3 rb s3://test-9187263
remove_bucket: test-9187263
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You created an &lt;strong&gt;IAM User&lt;/strong&gt; with programmatic access and attached the &lt;strong&gt;PowerUserAccess&lt;/strong&gt; policy to the new user. This gives the user permission to access most AWS services and perform most actions, and in general is not recommended for security purposes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You noted the &lt;em&gt;Access Key ID&lt;/em&gt; and &lt;em&gt;Secret access key&lt;/em&gt; for the new user and configured the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; tool to use these access keys.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You learned about the syntax of the &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; tool, and how to get more information about a specific &lt;code class=&quot;highlighter-rouge&quot;&gt;awscli&lt;/code&gt; command.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You created an S3 bucket and deleted the same S3 bucket.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Adrian Teng-Amnuay</name><email>pumpadrian@gmail.com</email></author><category term="cli" /><summary type="html">In this tutorial you’ll install the AWS command line interface and learn how to set up an IAM user with programmatic access to AWS resources. This tutorial assumes you have basic command-line knowledge on either Mac or a unix-like operating system.</summary></entry><entry><title type="html">Example Post</title><link href="http://localhost:4000/general/2019/09/30/example-post/" rel="alternate" type="text/html" title="Example Post" /><published>2019-09-30T00:00:00-07:00</published><updated>2019-09-30T00:00:00-07:00</updated><id>http://localhost:4000/general/2019/09/30/example-post</id><content type="html" xml:base="http://localhost:4000/general/2019/09/30/example-post/">&lt;p&gt;This is an example post that shows what rendered markdown looks like on the site.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;./another-page.html&quot;&gt;Link to another page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There should be whitespace between paragraphs.&lt;/p&gt;

&lt;p&gt;There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.&lt;/p&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;

&lt;p&gt;This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.&lt;/p&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a blockquote following a header.&lt;/p&gt;

  &lt;p&gt;When something is important enough, you do it even if the odds are not in your favor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Javascript code with syntax highlighting.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dateformat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./lang/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Ruby code with syntax highlighting&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;GitHubPages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_dependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;= &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;header-4&quot;&gt;Header 4&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;This is an unordered list following a header.&lt;/li&gt;
  &lt;li&gt;This is an unordered list following a header.&lt;/li&gt;
  &lt;li&gt;This is an unordered list following a header.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;header-5&quot;&gt;Header 5&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;This is an ordered list following a header.&lt;/li&gt;
  &lt;li&gt;This is an ordered list following a header.&lt;/li&gt;
  &lt;li&gt;This is an ordered list following a header.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;header-6&quot;&gt;Header 6&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;head1&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;head two&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;three&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ok&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;good swedish fish&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;nice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;out of stock&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;good and plenty&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;nice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ok&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;good &lt;code class=&quot;highlighter-rouge&quot;&gt;oreos&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;hmm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ok&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;good &lt;code class=&quot;highlighter-rouge&quot;&gt;zoute&lt;/code&gt; drop&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;yumm&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;theres-a-horizontal-rule-below-this&quot;&gt;There’s a horizontal rule below this.&lt;/h3&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;here-is-an-unordered-list&quot;&gt;Here is an unordered list:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Item foo&lt;/li&gt;
  &lt;li&gt;Item bar&lt;/li&gt;
  &lt;li&gt;Item baz&lt;/li&gt;
  &lt;li&gt;Item zip&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;and-an-ordered-list&quot;&gt;And an ordered list:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item one&lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
  &lt;li&gt;Item three&lt;/li&gt;
  &lt;li&gt;Item four&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;and-a-nested-list&quot;&gt;And a nested list:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;level 1 item
    &lt;ul&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
      &lt;li&gt;level 2 item
        &lt;ul&gt;
          &lt;li&gt;level 3 item&lt;/li&gt;
          &lt;li&gt;level 3 item&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;level 1 item
    &lt;ul&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;level 1 item
    &lt;ul&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
      &lt;li&gt;level 2 item&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;level 1 item&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;small-image&quot;&gt;Small image&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/octocat.png&quot; alt=&quot;Octocat&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;large-image&quot;&gt;Large image&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/branching.png&quot; alt=&quot;Branching&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;definition-lists-can-be-used-with-html-syntax&quot;&gt;Definition lists can be used with HTML syntax.&lt;/h3&gt;

&lt;dl&gt;
&lt;dt&gt;Name&lt;/dt&gt;
&lt;dd&gt;Godzilla&lt;/dd&gt;
&lt;dt&gt;Born&lt;/dt&gt;
&lt;dd&gt;1952&lt;/dd&gt;
&lt;dt&gt;Birthplace&lt;/dt&gt;
&lt;dd&gt;Japan&lt;/dd&gt;
&lt;dt&gt;Color&lt;/dt&gt;
&lt;dd&gt;Green&lt;/dd&gt;
&lt;/dl&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The final element.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Adrian Teng-Amnuay</name><email>pumpadrian@gmail.com</email></author><category term="example" /><summary type="html">This is an example post that shows what rendered markdown looks like on the site.</summary></entry></feed>